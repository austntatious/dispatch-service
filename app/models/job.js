'use strict'; 

var Sequelize = require('sequelize');

// DEFAULT SCOPE SHOULD BE ORGANIZATION OR DRIVER FOR ALL QUERIES
// Jobs belong to Drivers & Organizations
// Has Final Recipient info - phone, name, etc
// Has pickup & dropoff stops
// has startBy and FinishBefore fields signifying when order needs to be completed
// belongs to one Driver and one Organization
// Has updatedBy log to show if driver or admin is doing updates on job
// Has createdBy log to show if generated by API call or dashboard app - store admin info or client call info
// statuses : pending, dispatched, driverConfirmed (if deny, go back to pending), 
// statuses based on STOP status: pickedup, delayed, cancelled, completed   
// add a delayed method - cancel order assignment and append to unassigned order queue
// cancelling a job will also cancel its stops
// dispatchedBy to show if manually dispatched by admin or route optimizer
// autoAssign - on or off, if on, send to optimizer; if off, have web dispatch assign pickup & dropoff stop

module.exports = function (sequelize) {
  var Job = sequelize.define('Job', {
    driverToken: { type: Sequelize.STRING, unique: true },
    firstName: { type: Sequelize.STRING },
    lastName: { type: Sequelize.STRING },
    accountToken: { type: Sequelize.STRING },
    phone: { type: Sequelize.STRING, unique: true },
    onDuty: { type: Sequelize.BOOLEAN },
    locationLatitude: { type: Sequelize.DOUBLE },
    locationLongitude: { type: Sequelize.DOUBLE },
    locationUpdatedAt: { type: Sequelize.DATE},
  });

  return Job;
};